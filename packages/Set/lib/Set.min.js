/**
 * Copyright (c) 2018, Travis Clarke
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.Set={})}(this,function(t){"use strict";var e=function(t){function e(e){t.call(this,e)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.some=function(t){for(var e=this,r=0,n=e.entries();r<n.length;r+=1){var o=n[r];if(t(o[0],o[1],e))return!0}return!1},e.prototype.every=function(t){for(var e=this,r=0,n=e.entries();r<n.length;r+=1){var o=n[r];if(!t(o[0],o[1],e))return!1}return!0},e.prototype.isSubset=function(t){for(var e=this,r=0,n=e;r<n.length;r+=1){if(!t.has(n[r]))return!1}return!0},e.prototype.isSuperset=function(t){for(var e=this,r=0,n=t;r<n.length;r+=1){if(!e.has(n[r]))return!1}return!0},e.prototype.union=function(e){for(var r=this,n=new t(r),o=0,i=e;o<i.length;o+=1){n.add(i[o])}return n},e.prototype.intersection=function(e){for(var r=this,n=new t,o=0,i=e;o<i.length;o+=1){var f=i[o];r.has(f)&&n.add(f)}return n},e.prototype.difference=function(e){for(var r=this,n=new t(r),o=0,i=e;o<i.length;o+=1){n.delete(i[o])}return n},e.prototype.symmetricDifference=function(e){for(var r=this,n=new t(r),o=0,i=e;o<i.length;o+=1){var f=i[o];r.has(f)?n.delete(f):n.add(f)}return n},e}(Set);t.default=e,t.Set=e,Object.defineProperty(t,"__esModule",{value:!0})});