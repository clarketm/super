// @flow

import {Queue} from "../../../Queue/src/lib/Queue";
import {BinaryTreeNode} from "./BinaryTreeNode";
import type {Item} from "../../../shared/src/types";
declare export class BinaryTree {

  _root: ?BinaryTreeNode;
  get height(): number;
  get root(): ?BinaryTreeNode;
  constructor(iterable?: Array<number>): void;
  findMax(node?: ?BinaryTreeNode): ?BinaryTreeNode;
  findMin(node?: ?BinaryTreeNode): ?BinaryTreeNode;
  getHeight(node?: ?BinaryTreeNode): number;
  inOrder(node?: ?BinaryTreeNode): Array<BinaryTreeNode>;
  insert(value: any): void;
  levelOrder(node?: ?BinaryTreeNode): Array<BinaryTreeNode>;
  postOrder(node?: ?BinaryTreeNode): Array<BinaryTreeNode>;
  preOrder(node?: ?BinaryTreeNode): Array<BinaryTreeNode>;
  remove(value: any): void;
  search(value: any): ?BinaryTreeNode;
  toArray(traversal: $Keys<{IN_ORDER: string, LEVEL_ORDER: string, POST_ORDER: string, PRE_ORDER: string}>, flatten?: boolean): Array<BinaryTreeNode | any>;
}
declare export var TraversalType: {IN_ORDER: string, LEVEL_ORDER: string, POST_ORDER: string, PRE_ORDER: string};
